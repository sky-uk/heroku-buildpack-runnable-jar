#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

startTime=$SECONDS

# fail fast
set -e

BP_DIR=$(cd $(dirname $0)/..; pwd) # absolute path
BIN_DIR=$BP_DIR/bin
OPT_DIR=$BP_DIR/opt
LIB_DIR=$BP_DIR/lib
. $LIB_DIR/common.sh

# parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

GRADLE_TASK=${GRADLE_TASK-stage}

export_env_dir $ENV_DIR

JVM_COMMON_BUILDPACK=${JVM_COMMON_BUILDPACK:-"https://codon-buildpacks.s3.amazonaws.com/buildpacks/heroku/jvm-common.tgz"}
mkdir -p /tmp/jvm-common
curl --silent --location $JVM_COMMON_BUILDPACK | tar xzm -C /tmp/jvm-common --strip-components=1
. /tmp/jvm-common/bin/util
. /tmp/jvm-common/bin/java

# install JDK
javaVersion=$(detect_java_version ${BUILD_DIR})
echo -n "-----> Installing OpenJDK ${javaVersion}... "
install_java ${BUILD_DIR} ${javaVersion}
jdk_overlay ${BUILD_DIR}
echo "done"

${BUILD_DIR}/.jdk/jre/bin/keytool -import -alias bskyb -file ${BIN_DIR}/bskyb.der -keystore ${BUILD_DIR}/.jdk/jre/lib/security/cacerts -storepass changeit -noprompt

if [ ! -d $CACHE_DIR ] ; then
  mkdir $CACHE_DIR
fi

cd $BUILD_DIR

$BIN_DIR/download
if [[ -z $NO_PRE_DEPLOY ]]; then
  $BIN_DIR/pre-deploy
fi

duration=$(( SECONDS - startTime ))
echo "-----> Finished after $duration seconds"
